plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kr.co.cms'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Web (REST API 용)
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Validation (DTO 검증 시 사용)
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 개발 편의성
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Database - MySQL + JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// 암호화 (비밀번호 암호화 등 필요 시)
	implementation 'org.springframework.security:spring-security-crypto:6.1.5'
	
	// 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// MongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	
	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework:spring-messaging'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    //FTP
    implementation 'commons-net:commons-net:3.9.0'
    
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('compileJava', JavaCompile) {
	options.compilerArgs.add('-parameters')

	doLast {
		println "compileJava 작업의 컴파일러 인자: ${options.compilerArgs}"
	}
}
